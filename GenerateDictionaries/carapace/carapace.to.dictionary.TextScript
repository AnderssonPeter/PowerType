{{func escape
$0 | string.replace '`' "``" | string.replace "^"" "`^"" | string.replace "$" "`$"
end
}}
{{func writeFlag
Flag = $0
Recursive = $1
Longhand = Flag.Longhand
Shorthand = Flag.Shorthand
if Longhand != null
Longhand = "--" + Longhand
end
if Shorthand != null
Shorthand = "-" + Shorthand
end
}}[{{ if Flag.Type == "bool"
"Flag"
else
"Value"
end }}Parameter]@{
Keys = @("{{ [ Longhand, Shorthand ] | array.compact | array.join "^", ^"" }}");
Name = "{{ Flag.Usage | escape }}";
Description = "{{ Flag.Usage | escape }}";{{if Recursive}}
Recursive = $True;
{{end}}{{ if Flag.Type != "bool" }}
# Source = $?? # todo: Fix or remove this!{{ end }}
}{{end}}

{{func writeCommandParameters
Command = $0
for Flag in Command.LocalFlags
	Flag.ElementType = 'LocalFlag'
end
for Flag in Command.PersistentFlags
	Flag.ElementType = 'PersistentFlag'
end
for Flag in Command.Commands
	Flag.ElementType = 'Command'
end
Elements = Command.LocalFlags | array.concat Command.PersistentFlags | array.concat Command.Commands | array.compact
}}Keys = @("{{ Command.Name }}");
Name = "{{ Command.Name }}";
Description = "{{ Command.Short | escape }}";{{if Elements != empty}}
Parameters = @({{ for Element in Elements }}
    {{ Element | writeElement }}{{ if !for.last || Command.PersistentFlags != null }},{{ end }}{{ end }}
){{ end }}{{ end }}

{{func writeCommand
Command = $0
}}[CommandParameter]@{
{{ Command | writeCommandParameters }}
}{{end}}

{{ func writeElement
Element = $0
if Element.ElementType == "LocalFlag"
Element | writeFlag
end
if Element.Elementype == "PersistentFlag"
Element | writeFlag true
end
if Element.ElementType == "Command"
Element | writeCommand
end
end
}}
# Generated from Carapace
# Todo: Validate it against documentation
# Todo: Add Static and Dynamic Sources where appropriate
[PowerTypeDictionary]@{
Platforms = ([Platforms]::{{ Platforms | array.join " -bor [Platforms]::" }});
State = [DictionaryState]::Generated -bor [DictionaryState]::Experimental -bor [DictionaryState]::Incomplete;
Source = "Generated from carapace";
{{ if Url }}Url = "{{ Url }}";{{ end }}
{{ this | writeCommandParameters }}}