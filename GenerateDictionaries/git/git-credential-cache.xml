<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>
<refentry>
<refmeta>
<refentrytitle>git-credential-cache</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class="source">Git</refmiscinfo>
<refmiscinfo class="version"></refmiscinfo>
<refmiscinfo class="manual">Git Manual</refmiscinfo>
</refmeta>
<refnamediv>
  <refname>git-credential-cache</refname>
  <refpurpose>Helper to temporarily store passwords in memory</refpurpose>
</refnamediv>
<refsynopsisdiv id="_synopsis">
<literallayout class="monospaced">git config credential.helper 'cache [&lt;options&gt;]'</literallayout><simpara></simpara>
</refsynopsisdiv>
<refsect1 id="_description">
<title>DESCRIPTION</title>
<simpara>This command caches credentials in memory for use by future Git
programs. The stored credentials never touch the disk, and are forgotten
after a configurable timeout.  The cache is accessible over a Unix
domain socket, restricted to the current user by filesystem permissions.</simpara>
<simpara>You probably don&#8217;t want to invoke this command directly; it is meant to
be used as a credential helper by other parts of Git. See
<citerefentry>
<refentrytitle>gitcredentials</refentrytitle><manvolnum>7</manvolnum>
</citerefentry> or <literal>EXAMPLES</literal> below.</simpara>
</refsect1>
<refsect1 id="_options">
<title>OPTIONS</title>
<variablelist>
<varlistentry>
<term>
--timeout &lt;seconds&gt;
</term>
<listitem>
<simpara>
        Number of seconds to cache credentials (default: 900).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
--socket &lt;path&gt;
</term>
<listitem>
<simpara>
        Use <literal>&lt;path&gt;</literal> to contact a running cache daemon (or start a new
        cache daemon if one is not started).
        Defaults to <literal>$XDG_CACHE_HOME/git/credential/socket</literal> unless
        <literal>~/.git-credential-cache/</literal> exists in which case
        <literal>~/.git-credential-cache/socket</literal> is used instead.
        If your home directory is on a network-mounted filesystem, you
        may need to change this to a local filesystem. You must specify
        an absolute path.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 id="_controlling_the_daemon">
<title>CONTROLLING THE DAEMON</title>
<simpara>If you would like the daemon to exit early, forgetting all cached
credentials before their timeout, you can issue an <literal>exit</literal> action:</simpara>
<literallayout class="monospaced">git credential-cache exit</literallayout><simpara></simpara>
</refsect1>
<refsect1 id="_examples">
<title>EXAMPLES</title>
<simpara>The point of this helper is to reduce the number of times you must type
your username or password. For example:</simpara>
<literallayout class="monospaced">$ git config credential.helper cache
$ git push http://example.com/repo.git
Username: &lt;type your username&gt;
Password: &lt;type your password&gt;

[work for 5 more minutes]
$ git push http://example.com/repo.git
[your credentials are used automatically]</literallayout><simpara></simpara>
<simpara>You can provide options via the credential.helper configuration
variable (this example drops the cache time to 5 minutes):</simpara>
<literallayout class="monospaced">$ git config credential.helper 'cache --timeout=300'</literallayout><simpara></simpara>
</refsect1>
<refsect1 id="_git">
<title>GIT</title>
<simpara>Part of the <citerefentry>
<refentrytitle>git</refentrytitle><manvolnum>1</manvolnum>
</citerefentry> suite</simpara>
</refsect1>
</refentry>
