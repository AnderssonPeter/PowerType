<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>
<refentry>
<refmeta>
<refentrytitle>git-gui</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class="source">Git</refmiscinfo>
<refmiscinfo class="version"></refmiscinfo>
<refmiscinfo class="manual">Git Manual</refmiscinfo>
</refmeta>
<refnamediv>
  <refname>git-gui</refname>
  <refpurpose>A portable graphical interface to Git</refpurpose>
</refnamediv>
<refsynopsisdiv id="_synopsis">
<literallayout><emphasis>git gui</emphasis> [&lt;command&gt;] [arguments]</literallayout>
<simpara></simpara>
</refsynopsisdiv>
<refsect1 id="_description">
<title>DESCRIPTION</title>
<simpara>A Tcl/Tk based graphical user interface to Git.  <emphasis>git gui</emphasis> focuses
on allowing users to make changes to their repository by making
new commits, amending existing ones, creating branches, performing
local merges, and fetching/pushing to remote repositories.</simpara>
<simpara>Unlike <emphasis>gitk</emphasis>, <emphasis>git gui</emphasis> focuses on commit generation
and single file annotation and does not show project history.
It does however supply menu actions to start a <emphasis>gitk</emphasis> session from
within <emphasis>git gui</emphasis>.</simpara>
<simpara><emphasis>git gui</emphasis> is known to work on all popular UNIX systems, Mac OS X,
and Windows (under both Cygwin and MSYS).  To the extent possible
OS specific user interface guidelines are followed, making <emphasis>git gui</emphasis>
a fairly native interface for users.</simpara>
</refsect1>
<refsect1 id="_commands">
<title>COMMANDS</title>
<variablelist>
<varlistentry>
<term>
blame
</term>
<listitem>
<simpara>
        Start a blame viewer on the specified file on the given
        version (or working directory if not specified).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
browser
</term>
<listitem>
<simpara>
        Start a tree browser showing all files in the specified
        commit.  Files selected through the
        browser are opened in the blame viewer.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
citool
</term>
<listitem>
<simpara>
        Start <emphasis>git gui</emphasis> and arrange to make exactly one commit before
        exiting and returning to the shell.  The interface is limited
        to only commit actions, slightly reducing the application&#8217;s
        startup time and simplifying the menubar.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
version
</term>
<listitem>
<simpara>
        Display the currently running version of <emphasis>git gui</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 id="_examples">
<title>Examples</title>
<variablelist>
<varlistentry>
<term>
<literal>git gui blame Makefile</literal>
</term>
<listitem>
<simpara>
        Show the contents of the file <emphasis>Makefile</emphasis> in the current
        working directory, and provide annotations for both the
        original author of each line, and who moved the line to its
        current location.  The uncommitted file is annotated, and
        uncommitted changes (if any) are explicitly attributed to
        <emphasis>Not Yet Committed</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>git gui blame v0.99.8 Makefile</literal>
</term>
<listitem>
<simpara>
        Show the contents of <emphasis>Makefile</emphasis> in revision <emphasis>v0.99.8</emphasis>
        and provide annotations for each line.  Unlike the above
        example the file is read from the object database and not
        the working directory.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>git gui blame --line=100 Makefile</literal>
</term>
<listitem>
<simpara>
        Loads annotations as described above and automatically
        scrolls the view to center on line <emphasis>100</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>git gui citool</literal>
</term>
<listitem>
<simpara>
        Make one commit and return to the shell when it is complete.
        This command returns a non-zero exit code if the window was
        closed in any way other than by making a commit.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>git gui citool --amend</literal>
</term>
<listitem>
<simpara>
        Automatically enter the <emphasis>Amend Last Commit</emphasis> mode of
        the interface.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>git gui citool --nocommit</literal>
</term>
<listitem>
<simpara>
        Behave as normal citool, but instead of making a commit
        simply terminate with a zero exit code. It still checks
        that the index does not contain any unmerged entries, so
        you can use it as a GUI version of <citerefentry>
<refentrytitle>git-mergetool</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>git citool</literal>
</term>
<listitem>
<simpara>
        Same as <literal>git gui citool</literal> (above).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>git gui browser maint</literal>
</term>
<listitem>
<simpara>
        Show a browser for the tree of the <emphasis>maint</emphasis> branch.  Files
        selected in the browser can be viewed with the internal
        blame viewer.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 id="_see_also">
<title>SEE ALSO</title>
<variablelist>
<varlistentry>
<term>
<citerefentry>
<refentrytitle>gitk</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>
</term>
<listitem>
<simpara>
        The Git repository browser.  Shows branches, commit history
        and file differences.  gitk is the utility started by
        <emphasis>git gui</emphasis>'s Repository Visualize actions.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 id="_other">
<title>Other</title>
<simpara><emphasis>git gui</emphasis> is actually maintained as an independent project, but stable
versions are distributed as part of the Git suite for the convenience
of end users.</simpara>
<simpara>The official repository of the <emphasis>git gui</emphasis> project can be found at:</simpara>
<literallayout class="monospaced">https://github.com/prati0100/git-gui.git/</literallayout>
</refsect1>
<refsect1 id="_git">
<title>GIT</title>
<simpara>Part of the <citerefentry>
<refentrytitle>git</refentrytitle><manvolnum>1</manvolnum>
</citerefentry> suite</simpara>
</refsect1>
</refentry>
